name: 'Build and Deploy Docker'
description: ''
inputs:
  dockerfile_path:
    description: ''
    required: true
  context_path:
    description: ''
    required: true
  dockerhub_user_name:
    description: ''
    required: true
  dockerhub_password:
    description: ''
    required: true
  app_name:
    description: ''
    required: true
  env:
    description: '"prod", "stag", or "dev"'
    required: true
  push:
    description: "Push is a shorthand for --output=type=registry"
    required: false
    default: 'false'

runs:
  using: "composite"
  steps:
    - name: Login to Container Registry
      uses: docker/login-action@v2
      with:
        username: ${{ inputs.dockerhub_user_name }}
        password: ${{ inputs.dockerhub_password }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Create metadata for build
      id: meta
      if: ${{ inputs.env == 'prod' }}
      uses: docker/metadata-action@v4
      with:
        images: ${{ inputs.dockerhub_user_name }}/${{ inputs.app_name }}
        flavor: |
          latest=true
          prefix=
          suffix=
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
    - name: Build and push
      if: ${{ inputs.env == 'stag' }}
      uses: docker/build-push-action@v3
      with:
        context: ${{ inputs.context_path }}
        push: ${{ inputs.push }}
        tags: ${{ inputs.dockerhub_user_name }}/${{ inputs.app_name }}:stag
        file: ${{ inputs.dockerfile_path }}
    - name: Build and push
      if: ${{ inputs.env == 'dev' }}
      uses: docker/build-push-action@v3
      with:
        context: ${{ inputs.context_path }}
        push: ${{ inputs.push }}
        tags: ${{ inputs.dockerhub_user_name }}/${{ inputs.app_name }}:dev
        file: ${{ inputs.dockerfile_path }}
    - name: Build and push
      if: ${{ inputs.env == 'prod' }}
      uses: docker/build-push-action@v3
      with:
        context: ${{ inputs.context_path }}
        push: ${{ inputs.push }}
        tags: ${{ steps.meta.outputs.tags }}
        file: ${{ inputs.dockerfile_path }}